openapi: 3.0.3
info:
  contact:
    url: https://galasa.dev/support
  description: The Galasa Ecosystem REST API allows you to interact with a Galasa
    Ecosystem.
  title: Galasa Ecosystem API
  version: 0.28.0
servers:
- url: /
- url: "http://{server}:{port}"
  variables:
    server:
      default: localhost
    port:
      default: "8080"
paths:
  /cps/namespace:
    get:
      operationId: getCpsNamespaces
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: Array of CPS Namespaces
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonError'
          description: Internal Server Error
      summary: Get CPS Namespaces
      tags:
      - Configuration Property Store API
      x-accepts: application/json
  /cps/namespace/{namespace}:
    get:
      operationId: getCpsNamespaceProperties
      parameters:
      - description: |
          Property Namespace. First character of the namespace must be in the 'a'-'z' or 'A'-'Z' ranges,
          and following characters can be 'a'-'z' or 'A'-'Z' or '0'-'9'
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CpsProperty'
                type: array
          description: Array of CPS Properties
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonError'
          description: The namespace/prefix/suffix uses invalid characters or is badly
            formed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonError'
          description: Internal Server Error
      summary: Get all properties for a namepace
      tags:
      - Configuration Property Store API
      x-accepts: application/json
  /cps/namespace/{namespace}/prefix/{prefix}/suffix/{suffix}:
    get:
      operationId: getCpsNamespaceCascadeProperty
      parameters:
      - description: |
          Property Namespace. The first character of the namespace must be in the 'a'-'z' or 'A'-'Z' ranges,
          and following characters can be 'a'-'z' or 'A'-'Z' or '0'-'9'
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: |
          Property Prefix. The first character of the namespace must be in the 'a'-'z' or 'A'-'Z' ranges,
            and following characters can be 'a'-'z', 'A'-'Z', '0'-'9', '.' (period), '-' (dash) or '_' (underscore)
        explode: false
        in: path
        name: prefix
        required: true
        schema:
          type: string
        style: simple
      - description: |
          Property suffix. The first character of the namespace must be in the 'a'-'z' or 'A'-'Z' ranges,
          and following characters can be 'a'-'z', 'A'-'Z', '0'-'9', '.' (period), '-' (dash) or '_' (underscore)
        explode: false
        in: path
        name: suffix
        required: true
        schema:
          type: string
        style: simple
      - description: |
          Property infixes. The first character of the namespace must be in the 'a'-'z' or 'A'-'Z' ranges,
          and following characters can be 'a'-'z', 'A'-'Z', '0'-'9', '.' (period), '-' (dash) or '_' (underscore)
        explode: true
        in: query
        name: infixes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CpsProperty'
          description: CPS Property
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonError'
          description: Error
      summary: Get cascade CPS property
      tags:
      - Configuration Property Store API
      x-accepts: application/json
  /cps/namespace/{namespace}/property/{property}:
    put:
      description: "Searches multiple places in the property store for the first property\
        \ matching the namespace, \nprefix and suffix, and as many of the leading\
        \ infix strings as possible.\nThis results in a value which is the most specific,\
        \ given a sparsely populated hierarchical \nstructure of property names.\n\
        Over-rides of values (if present) are returned in preference to the normal\
        \ stored value \nof a property.\n"
      operationId: putCpsNamespaceProperty
      parameters:
      - description: |
          Property Namespace. First character of the namespace must be in the 'a'-'z' or 'A'-'Z' ranges,
          and following characters can be 'a'-'z' or 'A'-'Z' or '0'-'9'
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - description: "Property Name. \nThe first character of the namespace must be\
          \ in the 'a'-'z' or 'A'-'Z' ranges,\nand following characters can be 'a'-'z',\
          \ 'A'-'Z', '0'-'9', '.' (period), '-' (dash) or '_' (underscore)\n"
        explode: false
        in: path
        name: property
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CpsProperty'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CpsProperty'
          description: CPS Property
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonError'
          description: Error
      summary: Put new CPS Property
      tags:
      - Configuration Property Store API
      x-content-type: application/json
      x-accepts: application/json
  /ras/requestors:
    get:
      operationId: getRasRequestors
      parameters:
      - description: "provides sorting, requestor:asc or requestor:desc"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Requestors'
          description: Requestors
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonError'
          description: Error
      summary: Get all known requestors
      tags:
      - Result Archive Store API
      x-accepts: application/json
  /ras/resultnames:
    get:
      operationId: getRasResultNames
      parameters:
      - description: "provides sorting, results:asc or results:desc"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultNames'
          description: ResultNames
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonError'
          description: Error
      summary: Get all the known result names
      tags:
      - Result Archive Store API
      x-accepts: application/json
  /ras/runs:
    get:
      description: "API endpoint to query the Result Archive Store (RAS) for a (possibly\
        \ sorted) \nlist of runs based on the given search criteria.\n\nThe results\
        \ returned are paginated, in that the number of desired records per page can\
        \ be \nset, and if there are more test run records to retrieve, requests can\
        \ be made for \nsuccessive pages of results using the same query parameters,\
        \ but varying the 'page' value.\n\nNote: When querying multiple pages of results,\
        \ tests may complete, or be started between \nsuccessive calls to this endpoint.\
        \ When the 'to' field is not used, no timeframe \nlimit is specified in the\
        \ query, so results retrieved in later pages may contain \ntest runs which\
        \ were already retrieved in previous pages of the same query critera.\n\n\
        Invalid query parameters are ignored. For example: a 'cache-buster' parameter.\n"
      operationId: getRasSearchRuns
      parameters:
      - description: "Sorts the returned runs based on the sort field. \nSupports\
          \ sorting fields 'to','result' and 'testclass'.\n\nUse '{FIELD-NAME}:asc'\
          \ to sort in ascending order.\nUse '{FIELD-NAME}:desc' to sort in descending\
          \ order.\n\nYou can use multiple instances of this query parameter, or specify\n\
          multiple sort orders using one query parameter, and a comma-separated \n\
          list of sort orders.\n"
        examples:
          single:
            value: result:asc
          multiple:
            value: "result:asc,testclass:desc"
        explode: true
        in: query
        name: sort
        required: true
        schema:
          type: string
        style: form
      - description: |
          Result Status for the run. Commonly queried values: 'EnvFail','Passed','Failed'
        example: Passed
        explode: true
        in: query
        name: result
        required: false
        schema:
          type: string
        style: form
      - description: |
          The name of the OSGi bundle that the desired test run(s) were loaded with.
        example: dev.galasa.inttests
        explode: true
        in: query
        name: bundle
        required: false
        schema:
          type: string
        style: form
      - description: Name of the test requestor / submitter
        example: MyAutomationJobName
        explode: true
        in: query
        name: requestor
        required: false
        schema:
          type: string
        style: form
      - description: |
          Retrieve runs that started at a time after this date and time.

          The only scenario in which from can be omitted is when a runname has been supplied
        example: 2023-04-11T09:42:06.589180Z
        explode: true
        in: query
        name: from
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Retrieve runs that ended at a date and time prior to this date\
          \ and time value.\nIf you specify this parameter, only test runs which have\
          \ completed will be returned. \nTests currently in-flight will not be visible.\n"
        example: 2023-04-11T09:43:27.324075Z"
        explode: true
        in: query
        name: to
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: The full test name (package + short test name)
        example: dev.galasa.inttests.simbank.local.mvp.SimBankLocalJava11UbuntuMvp
        explode: true
        in: query
        name: testname
        required: false
        schema:
          type: string
        style: form
      - description: "Causes a specific page in the available results to be returned.\
          \ \nThe first page is page 1.\nIf omitted, then page 1 is returned.\n"
        example: 2
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: |
          The number of test results returned within each page.
          If omitted, the default value is 100.
        example: 20
        explode: true
        in: query
        name: size
        required: false
        schema:
          type: integer
        style: form
      - description: "The ID for a specific test run as seen by the RAS. \nThis number\
          \ is unique across the system, so using this field you can expect\none or\
          \ zero test runs in the first page.\n"
        example: cdb-a4ddb7fd1dab8d6025e4f3894010d20d
        explode: true
        in: query
        name: runId
        required: false
        schema:
          type: string
        style: form
      - description: |
          The name of the test run for which details will be returned.
          It will normally be unique, but this is not guaranteed, so you may see
          multiple results for the same runname under some rare circumstances.
        example: U1578
        explode: true
        in: query
        name: runname
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunResults'
          description: Array of Run Objects
        "400":
          content:
            application/json:
              examples:
                fromerror:
                  summary: An error occured parsing the from date-time field
                  value:
                    error_code: 5001
                    error_message: "GAL5001E: Error parsing the date-time field 'from'\
                      \ in the request URL. Invalid value '202E-04-12T13:08:10.295971Z'.\
                      \ Expecting a java LocalDateTime format. For example: '2023-04-11T09:42:06.589180Z'"
                toerror:
                  summary: An error occured parsing the to date-time field
                  value:
                    error_code: 5001
                    error_message: "GAL5001E: Error parsing the date-time field 'to'\
                      \ in the request URL. Invalid value '2023-0F-12T13:08:10.295971Z'.\
                      \ Expecting a java LocalDateTime format. For example: '2023-04-11T09:52:56.586180Z'"
                interror:
                  summary: An error occured parsing integer parameter
                  value:
                    error_code: 5005
                    error_message: "GAL5005E: Error parsing the query parameter 'page''\
                      \ in the request URL. Invalid value 'five'. Expecting an integer."
                duplicateerror:
                  summary: An error occured parsing duplicate parameter
                  value:
                    error_code: 5006
                    error_message: "GAL5006E: Error parsing the query parameters.\
                      \ Duplicate instances of query parameter 'size' found in the\
                      \ request URL. Expecting only one."
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "404":
          content:
            application/json:
              examples:
                runiderror:
                  summary: An error occured when trying to retrieve a specific run  using
                    a runId
                  value:
                    error_code: 5002
                    error_message: "GAL5002E: Error retrieving ras run from RunID\
                      \ 'cdb-a1b2c3d4e5f6g7h8i9'."
              schema:
                $ref: '#/components/schemas/APIError'
          description: Not Found
        "500":
          content:
            application/json:
              examples:
                genericerror:
                  summary: An error occured when trying access the endpoint
                  value:
                    error_code: 5000
                    error_message: "GAL5000E: Error occured when trying to access\
                      \ the endpoint. Report the problem to your Galasa Ecosystem\
                      \ owner."
                runerror:
                  summary: An error occured when trying to retireve the runs
                  value:
                    error_code: 5003
                    error_message: "GAL5003E: Error retrieving runs. Report the problem\
                      \ to your Galasa Ecosystem owner."
                pageerror:
                  summary: An error occured when trying to return a results page
                  value:
                    error_code: 5004
                    error_message: "GAL5004E: Error retrieving page. Report the problem\
                      \ to your Galasa Ecosystem owner."
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Server
      summary: Get Runs from Query
      tags:
      - Result Archive Store API
      x-accepts: application/json
  /ras/runs/{runid}:
    get:
      operationId: getRasRunById
      parameters:
      - description: Run Id
        explode: false
        in: path
        name: runid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Run'
          description: Run Data
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonError'
          description: Error
      summary: Get Run by ID
      tags:
      - Result Archive Store API
      x-accepts: application/json
  /ras/runs/{runid}/runlog:
    get:
      operationId: getRasRunLog
      parameters:
      - description: Run Id
        explode: false
        in: path
        name: runid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: Run Data
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonError'
          description: Error
      summary: Get Run Log
      tags:
      - Result Archive Store API
      x-accepts: application/json
  /ras/runs/{runid}/artifacts:
    get:
      operationId: getRasRunArtifactList
      parameters:
      - description: Run Id
        explode: false
        in: path
        name: runid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtifactIndex'
          description: The list of artifacts was returned.
        "404":
          content:
            application/json:
              examples:
                runiderror:
                  summary: An error occured when trying to retrieve a specific run  using
                    a runId
                  value:
                    error_code: 5002
                    error_message: "GAL5002E: Error retrieving ras run from RunID\
                      \ 'cdb-a1b2c3d4e5f6g7h8i9'."
              schema:
                $ref: '#/components/schemas/APIError'
          description: Not Found
        "500":
          content:
            application/json:
              examples:
                genericerror:
                  summary: An error occured when trying access the endpoint
                  value:
                    error_code: 5000
                    error_message: "GAL5000E: Error occured when trying to access\
                      \ the endpoint. Report the problem to your Galasa EcoSystem\
                      \ owner."
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Server Error
      summary: Get the available Run artifacts which can be downloaded.
      tags:
      - Result Archive Store API
      x-accepts: application/json
  /ras/runs/{runid}/files/{artifactPath}:
    get:
      operationId: getRasRunArtifactByPath
      parameters:
      - description: Run Id
        explode: false
        in: path
        name: runid
        required: true
        schema:
          type: string
        style: simple
      - description: Run Artifact path
        explode: false
        in: path
        name: artifactPath
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/octet-stream:
              example: !!binary |-
                YXR0YWNobWVudDsgZmlsZW5hbWU9ImNwcy5wcm9wZXJ0aWVzIg==
              schema:
                format: binary
                type: string
          description: The artifact is made available to read.
        "404":
          content:
            application/json:
              examples:
                runiderror:
                  summary: An error occured when trying to retrieve a specific run  using
                    a runId
                  value:
                    error_code: 5002
                    error_message: "GAL5002E: Error retrieving ras run from RunID\
                      \ 'cdb-a1b2c3d4e5f6g7h8i9'."
              schema:
                $ref: '#/components/schemas/APIError'
          description: Not Found
        "500":
          content:
            application/json:
              examples:
                genericerror:
                  summary: An error occured when trying access the endpoint
                  value:
                    error_code: 5000
                    error_message: "GAL5000E: Error occured when trying to access\
                      \ the endpoint. Report the problem to your Galasa EcoSystem\
                      \ owner."
                locatingerror:
                  summary: An error occured when trying to locate the artifact
                  value:
                    error_code: 5008
                    error_message: "GAL5008E: Error locating artifact '/unlocated.file'\
                      \ for run with identifier 'U116'."
                retrievingerror:
                  summary: An error occured when trying to retrieve the artifact
                  value:
                    error_code: 5009
                    error_message: "GAL5009E: Error retrieving artifact  '/framework/cps_record.properties'\
                      \ for run with identifier 'U116'."
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Server
      summary: Download Artifact for a given runid by artifactPath
      tags:
      - Result Archive Store API
      x-accepts: application/json
  /ras/testclasses:
    get:
      operationId: getRasTestclasses
      parameters:
      - description: Provide Sorting
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestClasses'
          description: TestClasses
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonError'
          description: Error
      summary: Get all the known test classes
      tags:
      - Result Archive Store API
      x-accepts: application/json
  /runs/{groupId}:
    get:
      operationId: getRunsGroup
      parameters:
      - description: Run Group ID
        explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestRuns'
          description: Run Info
      summary: Get group runs
      tags:
      - Runs API
      x-accepts: application/json
    post:
      operationId: postSubmitTestRuns
      parameters:
      - description: Run Group ID
        explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestRunRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestRuns'
          description: Test Submitted
      summary: Sumbit test runs
      tags:
      - Runs API
      x-content-type: application/json
      x-accepts: application/json
  /webui/worklist:
    delete:
      operationId: deleteWebuiWorklistRunId
      parameters:
      - description: Run Id
        explode: true
        in: query
        name: runId
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Worklist'
          description: Run removed from Worklist and updated Worklist returned
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonError'
          description: Run not found
      summary: Remove RAS runId from Worklist
      tags:
      - WebUI Worklist API
      x-accepts: application/json
    get:
      operationId: getWebuiWorklist
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Worklist'
          description: Array of Worklist objects
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonError'
          description: Error
      summary: Get the users Worklist
      tags:
      - WebUI Worklist API
      x-accepts: application/json
    put:
      operationId: addWebuiWorklistRunId
      parameters:
      - description: Run ID
        explode: true
        in: query
        name: runId
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Worklist'
          description: Run added to Worklist and updated Worklist returned
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonError'
          description: Run not found
      summary: Add RAS runId to Worklist
      tags:
      - WebUI Worklist API
      x-accepts: application/json
  /bootstrap:
    get:
      operationId: getEcosystemBootstrap
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: The Galasa ecosystem bootstrap.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonError'
          description: Error
      summary: Contact the Galasa ecosystem
      tags:
      - Bootstrap API
      x-accepts: application/json
components:
  schemas:
    CpsProperty:
      example:
        name: name
        value: value
      properties:
        name:
          description: "The fully-qualified property name, including the 'namespace'."
          type: string
        value:
          type: string
    JsonError:
      properties:
        error:
          type: string
    APIError:
      properties:
        error_code:
          type: integer
        error_message:
          type: string
    TestRuns:
      example:
        complete: true
        runs:
        - test: test
          queued: queued
          repo: repo
          type: type
          requestor: requestor
          rerun: true
          local: true
          result: result
          rerunReason: rerunReason
          trace: true
          stream: stream
          name: name
          rasRunId: rasRunId
          bundleName: bundleName
          obr: obr
          group: group
          testName: testName
          status: status
        - test: test
          queued: queued
          repo: repo
          type: type
          requestor: requestor
          rerun: true
          local: true
          result: result
          rerunReason: rerunReason
          trace: true
          stream: stream
          name: name
          rasRunId: rasRunId
          bundleName: bundleName
          obr: obr
          group: group
          testName: testName
          status: status
      properties:
        complete:
          type: boolean
        runs:
          items:
            $ref: '#/components/schemas/TestRun'
          type: array
    TestRun:
      example:
        test: test
        queued: queued
        repo: repo
        type: type
        requestor: requestor
        rerun: true
        local: true
        result: result
        rerunReason: rerunReason
        trace: true
        stream: stream
        name: name
        rasRunId: rasRunId
        bundleName: bundleName
        obr: obr
        group: group
        testName: testName
        status: status
      properties:
        name:
          type: string
        type:
          type: string
        group:
          type: string
        test:
          type: string
        bundleName:
          type: string
        testName:
          type: string
        status:
          type: string
        result:
          type: string
        queued:
          type: string
        requestor:
          type: string
        stream:
          type: string
        repo:
          type: string
        obr:
          type: string
        rerun:
          type: boolean
        rerunReason:
          type: string
        local:
          type: boolean
        trace:
          type: boolean
        rasRunId:
          type: string
    TestRunRequest:
      example:
        trace: true
        sharedEnvironmentRunName: sharedEnvironmentRunName
        requestorType: requestorType
        testStream: testStream
        classNames:
        - classNames
        - classNames
        sharedEnvironmentPhase: sharedEnvironmentPhase
        mavenRepository: mavenRepository
        overrides: "{}"
        requestor: requestor
        obr: obr
      properties:
        classNames:
          items:
            type: string
          type: array
        requestorType:
          type: string
        requestor:
          type: string
        testStream:
          type: string
        obr:
          type: string
        mavenRepository:
          type: string
        sharedEnvironmentPhase:
          type: string
        sharedEnvironmentRunName:
          type: string
        overrides:
          type: object
        trace:
          type: boolean
    Requestors:
      example:
        requestors:
        - requestors
        - requestors
      properties:
        requestors:
          items:
            type: string
          type: array
      type: object
    TestStructure:
      example:
        result: result
        testShortName: testShortName
        runName: runName
        methods:
        - result: result
          methodName: methodName
          befores:
          - "{}"
          - "{}"
          className: className
          startTime: startTime
          endTime: endTime
          type: type
          runLogStart: 5
          runLogEnd: 2
          afters:
          - "{}"
          - "{}"
          status: status
        - result: result
          methodName: methodName
          befores:
          - "{}"
          - "{}"
          className: className
          startTime: startTime
          endTime: endTime
          type: type
          runLogStart: 5
          runLogEnd: 2
          afters:
          - "{}"
          - "{}"
          status: status
        queued: queued
        startTime: startTime
        endTime: endTime
        bundle: bundle
        requestor: requestor
        testName: testName
        status: status
      properties:
        runName:
          type: string
        bundle:
          type: string
        testName:
          type: string
        testShortName:
          type: string
        requestor:
          type: string
        status:
          type: string
        result:
          type: string
        queued:
          type: string
        startTime:
          type: string
        endTime:
          type: string
        methods:
          items:
            $ref: '#/components/schemas/TestMethod'
          type: array
      type: object
    TestMethod:
      example:
        result: result
        methodName: methodName
        befores:
        - "{}"
        - "{}"
        className: className
        startTime: startTime
        endTime: endTime
        type: type
        runLogStart: 5
        runLogEnd: 2
        afters:
        - "{}"
        - "{}"
        status: status
      properties:
        className:
          type: string
        methodName:
          type: string
        type:
          type: string
        status:
          type: string
        result:
          type: string
        startTime:
          type: string
        endTime:
          type: string
        runLogStart:
          type: integer
        runLogEnd:
          type: integer
        befores:
          items:
            type: object
          type: array
        afters:
          items:
            type: object
          type: array
      type: object
    Artifact:
      example:
        artifactPath: artifactPath
        contentType: contentType
      properties:
        artifactPath:
          type: string
        contentType:
          type: string
    TestClasses:
      example:
        testclasses:
        - testclass: testclass
          bundle: bundle
        - testclass: testclass
          bundle: bundle
      properties:
        testclasses:
          items:
            $ref: '#/components/schemas/TestClass'
          type: array
      type: object
    TestClass:
      example:
        testclass: testclass
        bundle: bundle
      properties:
        testclass:
          type: string
        bundle:
          type: string
      type: object
    ResultNames:
      example:
        resultnames:
        - resultnames
        - resultnames
      properties:
        resultnames:
          items:
            type: string
          type: array
      type: object
    Run:
      example:
        testStructure:
          result: result
          testShortName: testShortName
          runName: runName
          methods:
          - result: result
            methodName: methodName
            befores:
            - "{}"
            - "{}"
            className: className
            startTime: startTime
            endTime: endTime
            type: type
            runLogStart: 5
            runLogEnd: 2
            afters:
            - "{}"
            - "{}"
            status: status
          - result: result
            methodName: methodName
            befores:
            - "{}"
            - "{}"
            className: className
            startTime: startTime
            endTime: endTime
            type: type
            runLogStart: 5
            runLogEnd: 2
            afters:
            - "{}"
            - "{}"
            status: status
          queued: queued
          startTime: startTime
          endTime: endTime
          bundle: bundle
          requestor: requestor
          testName: testName
          status: status
        runId: runId
        artifacts:
        - artifactPath: artifactPath
          contentType: contentType
        - artifactPath: artifactPath
          contentType: contentType
      properties:
        runId:
          type: string
        testStructure:
          $ref: '#/components/schemas/TestStructure'
        artifacts:
          items:
            $ref: '#/components/schemas/Artifact'
          type: array
      type: object
    RunResults:
      example:
        numPages: 1
        amountOfRuns: 5
        pageNumber: 0
        pageSize: 6
        runs:
        - testStructure:
            result: result
            testShortName: testShortName
            runName: runName
            methods:
            - result: result
              methodName: methodName
              befores:
              - "{}"
              - "{}"
              className: className
              startTime: startTime
              endTime: endTime
              type: type
              runLogStart: 5
              runLogEnd: 2
              afters:
              - "{}"
              - "{}"
              status: status
            - result: result
              methodName: methodName
              befores:
              - "{}"
              - "{}"
              className: className
              startTime: startTime
              endTime: endTime
              type: type
              runLogStart: 5
              runLogEnd: 2
              afters:
              - "{}"
              - "{}"
              status: status
            queued: queued
            startTime: startTime
            endTime: endTime
            bundle: bundle
            requestor: requestor
            testName: testName
            status: status
          runId: runId
          artifacts:
          - artifactPath: artifactPath
            contentType: contentType
          - artifactPath: artifactPath
            contentType: contentType
        - testStructure:
            result: result
            testShortName: testShortName
            runName: runName
            methods:
            - result: result
              methodName: methodName
              befores:
              - "{}"
              - "{}"
              className: className
              startTime: startTime
              endTime: endTime
              type: type
              runLogStart: 5
              runLogEnd: 2
              afters:
              - "{}"
              - "{}"
              status: status
            - result: result
              methodName: methodName
              befores:
              - "{}"
              - "{}"
              className: className
              startTime: startTime
              endTime: endTime
              type: type
              runLogStart: 5
              runLogEnd: 2
              afters:
              - "{}"
              - "{}"
              status: status
            queued: queued
            startTime: startTime
            endTime: endTime
            bundle: bundle
            requestor: requestor
            testName: testName
            status: status
          runId: runId
          artifacts:
          - artifactPath: artifactPath
            contentType: contentType
          - artifactPath: artifactPath
            contentType: contentType
      properties:
        pageNumber:
          type: integer
        pageSize:
          type: integer
        numPages:
          type: integer
        amountOfRuns:
          type: integer
        runs:
          items:
            $ref: '#/components/schemas/Run'
          type: array
      type: object
    Worklist:
      example:
        worklistItems:
        - result: result
          runName: runName
          runId: runId
          shortName: shortName
          testClass: testClass
        - result: result
          runName: runName
          runId: runId
          shortName: shortName
          testClass: testClass
      properties:
        worklistItems:
          items:
            $ref: '#/components/schemas/WorklistItem'
          type: array
      type: object
    WorklistItem:
      example:
        result: result
        runName: runName
        runId: runId
        shortName: shortName
        testClass: testClass
      properties:
        runId:
          type: string
        runName:
          type: string
        shortName:
          type: string
        testClass:
          type: string
        result:
          type: string
      type: object
    ArtifactIndex:
      items:
        $ref: '#/components/schemas/ArtifactIndexEntry'
      type: array
      uniqueItems: true
    ArtifactIndexEntry:
      example:
        path: path
        runId: runId
        url: https://openapi-generator.tech
      properties:
        runId:
          readOnly: true
          type: string
        path:
          readOnly: true
          type: string
        url:
          format: uri
          readOnly: true
          type: string
      type: object

