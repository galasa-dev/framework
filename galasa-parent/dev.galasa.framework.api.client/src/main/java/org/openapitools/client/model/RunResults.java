/*
 * Galasa Ecosystem API
 * The Galasa Ecosystem REST API allows you to interact with a Galasa Ecosystem.
 *
 * The version of the OpenAPI document: 0.28.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.Run;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * RunResults
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-06-23T09:56:25.063401+01:00[Europe/London]")
public class RunResults {
  public static final String SERIALIZED_NAME_PAGE_NUMBER = "pageNumber";
  @SerializedName(SERIALIZED_NAME_PAGE_NUMBER)
  private Integer pageNumber;

  public static final String SERIALIZED_NAME_PAGE_SIZE = "pageSize";
  @SerializedName(SERIALIZED_NAME_PAGE_SIZE)
  private Integer pageSize;

  public static final String SERIALIZED_NAME_NUM_PAGES = "numPages";
  @SerializedName(SERIALIZED_NAME_NUM_PAGES)
  private Integer numPages;

  public static final String SERIALIZED_NAME_AMOUNT_OF_RUNS = "amountOfRuns";
  @SerializedName(SERIALIZED_NAME_AMOUNT_OF_RUNS)
  private Integer amountOfRuns;

  public static final String SERIALIZED_NAME_RUNS = "runs";
  @SerializedName(SERIALIZED_NAME_RUNS)
  private List<Run> runs = null;

  public RunResults() {
  }

  public RunResults pageNumber(Integer pageNumber) {
    
    this.pageNumber = pageNumber;
    return this;
  }

   /**
   * Get pageNumber
   * @return pageNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getPageNumber() {
    return pageNumber;
  }


  public void setPageNumber(Integer pageNumber) {
    this.pageNumber = pageNumber;
  }


  public RunResults pageSize(Integer pageSize) {
    
    this.pageSize = pageSize;
    return this;
  }

   /**
   * Get pageSize
   * @return pageSize
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getPageSize() {
    return pageSize;
  }


  public void setPageSize(Integer pageSize) {
    this.pageSize = pageSize;
  }


  public RunResults numPages(Integer numPages) {
    
    this.numPages = numPages;
    return this;
  }

   /**
   * Get numPages
   * @return numPages
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getNumPages() {
    return numPages;
  }


  public void setNumPages(Integer numPages) {
    this.numPages = numPages;
  }


  public RunResults amountOfRuns(Integer amountOfRuns) {
    
    this.amountOfRuns = amountOfRuns;
    return this;
  }

   /**
   * Get amountOfRuns
   * @return amountOfRuns
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getAmountOfRuns() {
    return amountOfRuns;
  }


  public void setAmountOfRuns(Integer amountOfRuns) {
    this.amountOfRuns = amountOfRuns;
  }


  public RunResults runs(List<Run> runs) {
    
    this.runs = runs;
    return this;
  }

  public RunResults addRunsItem(Run runsItem) {
    if (this.runs == null) {
      this.runs = new ArrayList<>();
    }
    this.runs.add(runsItem);
    return this;
  }

   /**
   * Get runs
   * @return runs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Run> getRuns() {
    return runs;
  }


  public void setRuns(List<Run> runs) {
    this.runs = runs;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RunResults runResults = (RunResults) o;
    return Objects.equals(this.pageNumber, runResults.pageNumber) &&
        Objects.equals(this.pageSize, runResults.pageSize) &&
        Objects.equals(this.numPages, runResults.numPages) &&
        Objects.equals(this.amountOfRuns, runResults.amountOfRuns) &&
        Objects.equals(this.runs, runResults.runs);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pageNumber, pageSize, numPages, amountOfRuns, runs);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RunResults {\n");
    sb.append("    pageNumber: ").append(toIndentedString(pageNumber)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("    numPages: ").append(toIndentedString(numPages)).append("\n");
    sb.append("    amountOfRuns: ").append(toIndentedString(amountOfRuns)).append("\n");
    sb.append("    runs: ").append(toIndentedString(runs)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("pageNumber");
    openapiFields.add("pageSize");
    openapiFields.add("numPages");
    openapiFields.add("amountOfRuns");
    openapiFields.add("runs");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to RunResults
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (RunResults.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in RunResults is not found in the empty JSON string", RunResults.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!RunResults.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `RunResults` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("runs") != null && !jsonObj.get("runs").isJsonNull()) {
        JsonArray jsonArrayruns = jsonObj.getAsJsonArray("runs");
        if (jsonArrayruns != null) {
          // ensure the json data is an array
          if (!jsonObj.get("runs").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `runs` to be an array in the JSON string but got `%s`", jsonObj.get("runs").toString()));
          }

          // validate the optional field `runs` (array)
          for (int i = 0; i < jsonArrayruns.size(); i++) {
            Run.validateJsonObject(jsonArrayruns.get(i).getAsJsonObject());
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!RunResults.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'RunResults' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<RunResults> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(RunResults.class));

       return (TypeAdapter<T>) new TypeAdapter<RunResults>() {
           @Override
           public void write(JsonWriter out, RunResults value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public RunResults read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of RunResults given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of RunResults
  * @throws IOException if the JSON string is invalid with respect to RunResults
  */
  public static RunResults fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, RunResults.class);
  }

 /**
  * Convert an instance of RunResults to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

