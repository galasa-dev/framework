plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

group = 'dev.galasa'

sourceCompatibility = 11
targetCompatibility = 11

java {
    withJavadocJar()
    withSourcesJar()
}

tasks.withType(Javadoc) {
    failOnError = false
    enabled = true
}

repositories {
    maven {
        url "$sourceMaven"
    }
    maven {
        url "$centralMaven"
    }
}

signing {
    sign publishing.publications
}

tasks.withType(Sign) {
    onlyIf { isMainOrRelease.toBoolean() }
}

task gitHash(dependsOn : 'classes') {
    def dir    = file("${buildDir}/githash")
    def meta   = file("${buildDir}/githash/META-INF")
    def result = file("${buildDir}/githash/META-INF/git.hash")

    outputs.dir meta
    tasks.jar.dependsOn('gitHash')
    tasks.jar.from(dir)

    doLast {
        if(!meta.exists()) {
            meta.mkdirs()
        }

        def hash = "unknown"

        try {
            new ByteArrayOutputStream().withStream { os ->
                def r = exec {
                    commandLine 'git', 'log',  '--pretty=format:%H', '-1', '.'
                    standardOutput = os
                }
            hash = os.toString()
            }
        } catch(Exception e) {}
        result.write(hash)
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java

            pom {
                url = 'https://galasa.dev'
                name = 'A Galasa project'
                description = 'A Galasa project'
                licenses {
                    license {
                        name = 'Eclipse Public License - v 2.0'
                        url = 'https://www.eclipse.org/legal/epl-2.0/t'
                    }
                }
                developers {
                    developer {
                        name = 'Michael Baylis'
                        email = 'Michael.Baylis@uk.ibm.com'
                        organization = 'IBM'
                        organizationUrl = 'https://www.ibm.com'
                    }
                    developer {
                        name = 'William Yates'
                        email = 'wyates@uk.ibm.com'
                        organization = 'IBM'
                        organizationUrl = 'https://www.ibm.com'
                    }
                    developer {
                        name = 'David Roberts'
                        email = 'david.roberts@uk.ibm.com'
                        organization = 'IBM'
                        organizationUrl = 'https://www.ibm.com'
                    }
                    developer {
                        name = 'James Davies'
                        email = 'james.davies@ibm.com'
                        organization = 'IBM'
                        organizationUrl = 'https://www.ibm.com'
                    }
                    developer {
                        name = 'Kees Jansen'
                        email = 'kees.jansen@ibm.com'
                        organization = 'IBM'
                        organizationUrl = 'https://www.ibm.com'
                    }
                    developer {
                        name = 'Jade Carino'
                        email = 'jade.carino@ibm.com'
                        organization = 'IBM'
                        organizationUrl = 'https://www.ibm.com'
                    }
                }
                scm {
                    connection = 'scm:git:git:://github.com/galasa-dev/framework'
                    developerConnection = 'scm:git:git:://github.com/galasa-dev/framework'
                    url = 'https://github.com/galasa-dev/framework'
                }
                issueManagement {
                    system = 'GitHub'
                    url = 'https://github.com/galasa-dev/projectmanagement/issues'
                }
            }
        }
    }
    repositories {
        maven {
            url  = "$targetMaven"

            if ("$targetMaven".startsWith('http')) {
                credentials {
                    username System.getenv('MAVENUSERNAME')
                    password System.getenv('MAVENPASSWORD')
                }
            }
        }
    }
}
